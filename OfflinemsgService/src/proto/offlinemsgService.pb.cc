// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: offlinemsgService.proto

#include "offlinemsgService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace offlinemsgProto {
PROTOBUF_CONSTEXPR WriteOfflineRequest::WriteOfflineRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.friendid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WriteOfflineRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WriteOfflineRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WriteOfflineRequestDefaultTypeInternal() {}
  union {
    WriteOfflineRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WriteOfflineRequestDefaultTypeInternal _WriteOfflineRequest_default_instance_;
PROTOBUF_CONSTEXPR WriteOfflineReponse::WriteOfflineReponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errmsg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WriteOfflineReponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WriteOfflineReponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WriteOfflineReponseDefaultTypeInternal() {}
  union {
    WriteOfflineReponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WriteOfflineReponseDefaultTypeInternal _WriteOfflineReponse_default_instance_;
PROTOBUF_CONSTEXPR ReadOfflineRequest::ReadOfflineRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.userid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadOfflineRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadOfflineRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadOfflineRequestDefaultTypeInternal() {}
  union {
    ReadOfflineRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadOfflineRequestDefaultTypeInternal _ReadOfflineRequest_default_instance_;
PROTOBUF_CONSTEXPR ReadOfflineResponse::ReadOfflineResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/{}
  , /*decltype(_impl_.errmsg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadOfflineResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadOfflineResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadOfflineResponseDefaultTypeInternal() {}
  union {
    ReadOfflineResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadOfflineResponseDefaultTypeInternal _ReadOfflineResponse_default_instance_;
PROTOBUF_CONSTEXPR DelOfflineRequest::DelOfflineRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.userid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DelOfflineRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelOfflineRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelOfflineRequestDefaultTypeInternal() {}
  union {
    DelOfflineRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelOfflineRequestDefaultTypeInternal _DelOfflineRequest_default_instance_;
PROTOBUF_CONSTEXPR DelOfflineResponse::DelOfflineResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errmsg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DelOfflineResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelOfflineResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelOfflineResponseDefaultTypeInternal() {}
  union {
    DelOfflineResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelOfflineResponseDefaultTypeInternal _DelOfflineResponse_default_instance_;
}  // namespace offlinemsgProto
static ::_pb::Metadata file_level_metadata_offlinemsgService_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_offlinemsgService_2eproto = nullptr;
static const ::_pb::ServiceDescriptor* file_level_service_descriptors_offlinemsgService_2eproto[1];

const uint32_t TableStruct_offlinemsgService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::WriteOfflineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::WriteOfflineRequest, _impl_.friendid_),
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::WriteOfflineRequest, _impl_.msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::WriteOfflineReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::WriteOfflineReponse, _impl_.errcode_),
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::WriteOfflineReponse, _impl_.errmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::ReadOfflineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::ReadOfflineRequest, _impl_.userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::ReadOfflineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::ReadOfflineResponse, _impl_.errcode_),
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::ReadOfflineResponse, _impl_.errmsg_),
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::ReadOfflineResponse, _impl_.msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::DelOfflineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::DelOfflineRequest, _impl_.userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::DelOfflineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::DelOfflineResponse, _impl_.errcode_),
  PROTOBUF_FIELD_OFFSET(::offlinemsgProto::DelOfflineResponse, _impl_.errmsg_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::offlinemsgProto::WriteOfflineRequest)},
  { 8, -1, -1, sizeof(::offlinemsgProto::WriteOfflineReponse)},
  { 16, -1, -1, sizeof(::offlinemsgProto::ReadOfflineRequest)},
  { 23, -1, -1, sizeof(::offlinemsgProto::ReadOfflineResponse)},
  { 32, -1, -1, sizeof(::offlinemsgProto::DelOfflineRequest)},
  { 39, -1, -1, sizeof(::offlinemsgProto::DelOfflineResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::offlinemsgProto::_WriteOfflineRequest_default_instance_._instance,
  &::offlinemsgProto::_WriteOfflineReponse_default_instance_._instance,
  &::offlinemsgProto::_ReadOfflineRequest_default_instance_._instance,
  &::offlinemsgProto::_ReadOfflineResponse_default_instance_._instance,
  &::offlinemsgProto::_DelOfflineRequest_default_instance_._instance,
  &::offlinemsgProto::_DelOfflineResponse_default_instance_._instance,
};

const char descriptor_table_protodef_offlinemsgService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027offlinemsgService.proto\022\017offlinemsgPro"
  "to\"4\n\023WriteOfflineRequest\022\020\n\010friendid\030\001 "
  "\001(\005\022\013\n\003msg\030\002 \001(\014\"6\n\023WriteOfflineReponse\022"
  "\017\n\007errcode\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\014\"$\n\022Read"
  "OfflineRequest\022\016\n\006userid\030\001 \001(\005\"C\n\023ReadOf"
  "flineResponse\022\017\n\007errcode\030\001 \001(\005\022\016\n\006errmsg"
  "\030\002 \001(\014\022\013\n\003msg\030\003 \003(\014\"#\n\021DelOfflineRequest"
  "\022\016\n\006userid\030\001 \001(\005\"5\n\022DelOfflineResponse\022\017"
  "\n\007errcode\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\0142\241\002\n\021Offl"
  "ineServiceRpc\022Z\n\014WriteOffline\022$.offlinem"
  "sgProto.WriteOfflineRequest\032$.offlinemsg"
  "Proto.WriteOfflineReponse\022X\n\013ReadOffline"
  "\022#.offlinemsgProto.ReadOfflineRequest\032$."
  "offlinemsgProto.ReadOfflineResponse\022V\n\nD"
  "elOffline\022#.offlinemsgProto.ReadOfflineR"
  "equest\032#.offlinemsgProto.DelOfflineRespo"
  "nseB\003\200\001\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_offlinemsgService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_offlinemsgService_2eproto = {
    false, false, 656, descriptor_table_protodef_offlinemsgService_2eproto,
    "offlinemsgService.proto",
    &descriptor_table_offlinemsgService_2eproto_once, nullptr, 0, 6,
    schemas, file_default_instances, TableStruct_offlinemsgService_2eproto::offsets,
    file_level_metadata_offlinemsgService_2eproto, file_level_enum_descriptors_offlinemsgService_2eproto,
    file_level_service_descriptors_offlinemsgService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_offlinemsgService_2eproto_getter() {
  return &descriptor_table_offlinemsgService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_offlinemsgService_2eproto(&descriptor_table_offlinemsgService_2eproto);
namespace offlinemsgProto {

// ===================================================================

class WriteOfflineRequest::_Internal {
 public:
};

WriteOfflineRequest::WriteOfflineRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:offlinemsgProto.WriteOfflineRequest)
}
WriteOfflineRequest::WriteOfflineRequest(const WriteOfflineRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WriteOfflineRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.friendid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.friendid_ = from._impl_.friendid_;
  // @@protoc_insertion_point(copy_constructor:offlinemsgProto.WriteOfflineRequest)
}

inline void WriteOfflineRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.friendid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WriteOfflineRequest::~WriteOfflineRequest() {
  // @@protoc_insertion_point(destructor:offlinemsgProto.WriteOfflineRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WriteOfflineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void WriteOfflineRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WriteOfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:offlinemsgProto.WriteOfflineRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _impl_.friendid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteOfflineRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 friendid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.friendid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WriteOfflineRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:offlinemsgProto.WriteOfflineRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 friendid = 1;
  if (this->_internal_friendid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_friendid(), target);
  }

  // bytes msg = 2;
  if (!this->_internal_msg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:offlinemsgProto.WriteOfflineRequest)
  return target;
}

size_t WriteOfflineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:offlinemsgProto.WriteOfflineRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes msg = 2;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_msg());
  }

  // int32 friendid = 1;
  if (this->_internal_friendid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_friendid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WriteOfflineRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WriteOfflineRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WriteOfflineRequest::GetClassData() const { return &_class_data_; }


void WriteOfflineRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WriteOfflineRequest*>(&to_msg);
  auto& from = static_cast<const WriteOfflineRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:offlinemsgProto.WriteOfflineRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_friendid() != 0) {
    _this->_internal_set_friendid(from._internal_friendid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WriteOfflineRequest::CopyFrom(const WriteOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:offlinemsgProto.WriteOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteOfflineRequest::IsInitialized() const {
  return true;
}

void WriteOfflineRequest::InternalSwap(WriteOfflineRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  swap(_impl_.friendid_, other->_impl_.friendid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteOfflineRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offlinemsgService_2eproto_getter, &descriptor_table_offlinemsgService_2eproto_once,
      file_level_metadata_offlinemsgService_2eproto[0]);
}

// ===================================================================

class WriteOfflineReponse::_Internal {
 public:
};

WriteOfflineReponse::WriteOfflineReponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:offlinemsgProto.WriteOfflineReponse)
}
WriteOfflineReponse::WriteOfflineReponse(const WriteOfflineReponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WriteOfflineReponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errmsg_){}
    , decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errmsg().empty()) {
    _this->_impl_.errmsg_.Set(from._internal_errmsg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:offlinemsgProto.WriteOfflineReponse)
}

inline void WriteOfflineReponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errmsg_){}
    , decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WriteOfflineReponse::~WriteOfflineReponse() {
  // @@protoc_insertion_point(destructor:offlinemsgProto.WriteOfflineReponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WriteOfflineReponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.errmsg_.Destroy();
}

void WriteOfflineReponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WriteOfflineReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:offlinemsgProto.WriteOfflineReponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errmsg_.ClearToEmpty();
  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteOfflineReponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 errcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes errmsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WriteOfflineReponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:offlinemsgProto.WriteOfflineReponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_errcode(), target);
  }

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_errmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:offlinemsgProto.WriteOfflineReponse)
  return target;
}

size_t WriteOfflineReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:offlinemsgProto.WriteOfflineReponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_errmsg());
  }

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WriteOfflineReponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WriteOfflineReponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WriteOfflineReponse::GetClassData() const { return &_class_data_; }


void WriteOfflineReponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WriteOfflineReponse*>(&to_msg);
  auto& from = static_cast<const WriteOfflineReponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:offlinemsgProto.WriteOfflineReponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errmsg().empty()) {
    _this->_internal_set_errmsg(from._internal_errmsg());
  }
  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WriteOfflineReponse::CopyFrom(const WriteOfflineReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:offlinemsgProto.WriteOfflineReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteOfflineReponse::IsInitialized() const {
  return true;
}

void WriteOfflineReponse::InternalSwap(WriteOfflineReponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.errmsg_, lhs_arena,
      &other->_impl_.errmsg_, rhs_arena
  );
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteOfflineReponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offlinemsgService_2eproto_getter, &descriptor_table_offlinemsgService_2eproto_once,
      file_level_metadata_offlinemsgService_2eproto[1]);
}

// ===================================================================

class ReadOfflineRequest::_Internal {
 public:
};

ReadOfflineRequest::ReadOfflineRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:offlinemsgProto.ReadOfflineRequest)
}
ReadOfflineRequest::ReadOfflineRequest(const ReadOfflineRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadOfflineRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.userid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.userid_ = from._impl_.userid_;
  // @@protoc_insertion_point(copy_constructor:offlinemsgProto.ReadOfflineRequest)
}

inline void ReadOfflineRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.userid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReadOfflineRequest::~ReadOfflineRequest() {
  // @@protoc_insertion_point(destructor:offlinemsgProto.ReadOfflineRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadOfflineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReadOfflineRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadOfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:offlinemsgProto.ReadOfflineRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadOfflineRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 userid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadOfflineRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:offlinemsgProto.ReadOfflineRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->_internal_userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_userid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:offlinemsgProto.ReadOfflineRequest)
  return target;
}

size_t ReadOfflineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:offlinemsgProto.ReadOfflineRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->_internal_userid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_userid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadOfflineRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadOfflineRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadOfflineRequest::GetClassData() const { return &_class_data_; }


void ReadOfflineRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadOfflineRequest*>(&to_msg);
  auto& from = static_cast<const ReadOfflineRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:offlinemsgProto.ReadOfflineRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_userid() != 0) {
    _this->_internal_set_userid(from._internal_userid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadOfflineRequest::CopyFrom(const ReadOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:offlinemsgProto.ReadOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOfflineRequest::IsInitialized() const {
  return true;
}

void ReadOfflineRequest::InternalSwap(ReadOfflineRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.userid_, other->_impl_.userid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadOfflineRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offlinemsgService_2eproto_getter, &descriptor_table_offlinemsgService_2eproto_once,
      file_level_metadata_offlinemsgService_2eproto[2]);
}

// ===================================================================

class ReadOfflineResponse::_Internal {
 public:
};

ReadOfflineResponse::ReadOfflineResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:offlinemsgProto.ReadOfflineResponse)
}
ReadOfflineResponse::ReadOfflineResponse(const ReadOfflineResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadOfflineResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){from._impl_.msg_}
    , decltype(_impl_.errmsg_){}
    , decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errmsg().empty()) {
    _this->_impl_.errmsg_.Set(from._internal_errmsg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:offlinemsgProto.ReadOfflineResponse)
}

inline void ReadOfflineResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){arena}
    , decltype(_impl_.errmsg_){}
    , decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReadOfflineResponse::~ReadOfflineResponse() {
  // @@protoc_insertion_point(destructor:offlinemsgProto.ReadOfflineResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadOfflineResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.~RepeatedPtrField();
  _impl_.errmsg_.Destroy();
}

void ReadOfflineResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadOfflineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:offlinemsgProto.ReadOfflineResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.Clear();
  _impl_.errmsg_.ClearToEmpty();
  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadOfflineResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 errcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes errmsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated bytes msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_msg();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadOfflineResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:offlinemsgProto.ReadOfflineResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_errcode(), target);
  }

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_errmsg(), target);
  }

  // repeated bytes msg = 3;
  for (int i = 0, n = this->_internal_msg_size(); i < n; i++) {
    const auto& s = this->_internal_msg(i);
    target = stream->WriteBytes(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:offlinemsgProto.ReadOfflineResponse)
  return target;
}

size_t ReadOfflineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:offlinemsgProto.ReadOfflineResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes msg = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.msg_.size());
  for (int i = 0, n = _impl_.msg_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.msg_.Get(i));
  }

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_errmsg());
  }

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadOfflineResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadOfflineResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadOfflineResponse::GetClassData() const { return &_class_data_; }


void ReadOfflineResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadOfflineResponse*>(&to_msg);
  auto& from = static_cast<const ReadOfflineResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:offlinemsgProto.ReadOfflineResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.msg_.MergeFrom(from._impl_.msg_);
  if (!from._internal_errmsg().empty()) {
    _this->_internal_set_errmsg(from._internal_errmsg());
  }
  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadOfflineResponse::CopyFrom(const ReadOfflineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:offlinemsgProto.ReadOfflineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOfflineResponse::IsInitialized() const {
  return true;
}

void ReadOfflineResponse::InternalSwap(ReadOfflineResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.msg_.InternalSwap(&other->_impl_.msg_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.errmsg_, lhs_arena,
      &other->_impl_.errmsg_, rhs_arena
  );
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadOfflineResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offlinemsgService_2eproto_getter, &descriptor_table_offlinemsgService_2eproto_once,
      file_level_metadata_offlinemsgService_2eproto[3]);
}

// ===================================================================

class DelOfflineRequest::_Internal {
 public:
};

DelOfflineRequest::DelOfflineRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:offlinemsgProto.DelOfflineRequest)
}
DelOfflineRequest::DelOfflineRequest(const DelOfflineRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DelOfflineRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.userid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.userid_ = from._impl_.userid_;
  // @@protoc_insertion_point(copy_constructor:offlinemsgProto.DelOfflineRequest)
}

inline void DelOfflineRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.userid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DelOfflineRequest::~DelOfflineRequest() {
  // @@protoc_insertion_point(destructor:offlinemsgProto.DelOfflineRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DelOfflineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DelOfflineRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DelOfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:offlinemsgProto.DelOfflineRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelOfflineRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 userid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DelOfflineRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:offlinemsgProto.DelOfflineRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->_internal_userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_userid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:offlinemsgProto.DelOfflineRequest)
  return target;
}

size_t DelOfflineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:offlinemsgProto.DelOfflineRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 userid = 1;
  if (this->_internal_userid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_userid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelOfflineRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DelOfflineRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelOfflineRequest::GetClassData() const { return &_class_data_; }


void DelOfflineRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DelOfflineRequest*>(&to_msg);
  auto& from = static_cast<const DelOfflineRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:offlinemsgProto.DelOfflineRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_userid() != 0) {
    _this->_internal_set_userid(from._internal_userid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DelOfflineRequest::CopyFrom(const DelOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:offlinemsgProto.DelOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelOfflineRequest::IsInitialized() const {
  return true;
}

void DelOfflineRequest::InternalSwap(DelOfflineRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.userid_, other->_impl_.userid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelOfflineRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offlinemsgService_2eproto_getter, &descriptor_table_offlinemsgService_2eproto_once,
      file_level_metadata_offlinemsgService_2eproto[4]);
}

// ===================================================================

class DelOfflineResponse::_Internal {
 public:
};

DelOfflineResponse::DelOfflineResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:offlinemsgProto.DelOfflineResponse)
}
DelOfflineResponse::DelOfflineResponse(const DelOfflineResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DelOfflineResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errmsg_){}
    , decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errmsg().empty()) {
    _this->_impl_.errmsg_.Set(from._internal_errmsg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:offlinemsgProto.DelOfflineResponse)
}

inline void DelOfflineResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errmsg_){}
    , decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DelOfflineResponse::~DelOfflineResponse() {
  // @@protoc_insertion_point(destructor:offlinemsgProto.DelOfflineResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DelOfflineResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.errmsg_.Destroy();
}

void DelOfflineResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DelOfflineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:offlinemsgProto.DelOfflineResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errmsg_.ClearToEmpty();
  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelOfflineResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 errcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes errmsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DelOfflineResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:offlinemsgProto.DelOfflineResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_errcode(), target);
  }

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_errmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:offlinemsgProto.DelOfflineResponse)
  return target;
}

size_t DelOfflineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:offlinemsgProto.DelOfflineResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_errmsg());
  }

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelOfflineResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DelOfflineResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelOfflineResponse::GetClassData() const { return &_class_data_; }


void DelOfflineResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DelOfflineResponse*>(&to_msg);
  auto& from = static_cast<const DelOfflineResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:offlinemsgProto.DelOfflineResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errmsg().empty()) {
    _this->_internal_set_errmsg(from._internal_errmsg());
  }
  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DelOfflineResponse::CopyFrom(const DelOfflineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:offlinemsgProto.DelOfflineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelOfflineResponse::IsInitialized() const {
  return true;
}

void DelOfflineResponse::InternalSwap(DelOfflineResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.errmsg_, lhs_arena,
      &other->_impl_.errmsg_, rhs_arena
  );
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelOfflineResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offlinemsgService_2eproto_getter, &descriptor_table_offlinemsgService_2eproto_once,
      file_level_metadata_offlinemsgService_2eproto[5]);
}

// ===================================================================

OfflineServiceRpc::~OfflineServiceRpc() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* OfflineServiceRpc::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_offlinemsgService_2eproto);
  return file_level_service_descriptors_offlinemsgService_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* OfflineServiceRpc::GetDescriptor() {
  return descriptor();
}

void OfflineServiceRpc::WriteOffline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::offlinemsgProto::WriteOfflineRequest*,
                         ::offlinemsgProto::WriteOfflineReponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method WriteOffline() not implemented.");
  done->Run();
}

void OfflineServiceRpc::ReadOffline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::offlinemsgProto::ReadOfflineRequest*,
                         ::offlinemsgProto::ReadOfflineResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ReadOffline() not implemented.");
  done->Run();
}

void OfflineServiceRpc::DelOffline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::offlinemsgProto::ReadOfflineRequest*,
                         ::offlinemsgProto::DelOfflineResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DelOffline() not implemented.");
  done->Run();
}

void OfflineServiceRpc::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_offlinemsgService_2eproto[0]);
  switch(method->index()) {
    case 0:
      WriteOffline(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::offlinemsgProto::WriteOfflineRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::offlinemsgProto::WriteOfflineReponse*>(
                 response),
             done);
      break;
    case 1:
      ReadOffline(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::offlinemsgProto::ReadOfflineRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::offlinemsgProto::ReadOfflineResponse*>(
                 response),
             done);
      break;
    case 2:
      DelOffline(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::offlinemsgProto::ReadOfflineRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::offlinemsgProto::DelOfflineResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& OfflineServiceRpc::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::offlinemsgProto::WriteOfflineRequest::default_instance();
    case 1:
      return ::offlinemsgProto::ReadOfflineRequest::default_instance();
    case 2:
      return ::offlinemsgProto::ReadOfflineRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& OfflineServiceRpc::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::offlinemsgProto::WriteOfflineReponse::default_instance();
    case 1:
      return ::offlinemsgProto::ReadOfflineResponse::default_instance();
    case 2:
      return ::offlinemsgProto::DelOfflineResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

OfflineServiceRpc_Stub::OfflineServiceRpc_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
OfflineServiceRpc_Stub::OfflineServiceRpc_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
OfflineServiceRpc_Stub::~OfflineServiceRpc_Stub() {
  if (owns_channel_) delete channel_;
}

void OfflineServiceRpc_Stub::WriteOffline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::offlinemsgProto::WriteOfflineRequest* request,
                              ::offlinemsgProto::WriteOfflineReponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void OfflineServiceRpc_Stub::ReadOffline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::offlinemsgProto::ReadOfflineRequest* request,
                              ::offlinemsgProto::ReadOfflineResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void OfflineServiceRpc_Stub::DelOffline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::offlinemsgProto::ReadOfflineRequest* request,
                              ::offlinemsgProto::DelOfflineResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace offlinemsgProto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::offlinemsgProto::WriteOfflineRequest*
Arena::CreateMaybeMessage< ::offlinemsgProto::WriteOfflineRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::offlinemsgProto::WriteOfflineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::offlinemsgProto::WriteOfflineReponse*
Arena::CreateMaybeMessage< ::offlinemsgProto::WriteOfflineReponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::offlinemsgProto::WriteOfflineReponse >(arena);
}
template<> PROTOBUF_NOINLINE ::offlinemsgProto::ReadOfflineRequest*
Arena::CreateMaybeMessage< ::offlinemsgProto::ReadOfflineRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::offlinemsgProto::ReadOfflineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::offlinemsgProto::ReadOfflineResponse*
Arena::CreateMaybeMessage< ::offlinemsgProto::ReadOfflineResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::offlinemsgProto::ReadOfflineResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::offlinemsgProto::DelOfflineRequest*
Arena::CreateMaybeMessage< ::offlinemsgProto::DelOfflineRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::offlinemsgProto::DelOfflineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::offlinemsgProto::DelOfflineResponse*
Arena::CreateMaybeMessage< ::offlinemsgProto::DelOfflineResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::offlinemsgProto::DelOfflineResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
